name: Java CI with Maven

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  actions: write
  checks: write
  deployments: write
  issues: write
  packages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: false
        fetch-depth: 0
        clean: true
        token: ${{ secrets.ACTIONS_DEMO_TOKEN }}

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github
        server-username: ${{ github.actor }}
        server-password: ${{ secrets.ACTIONS_DEMO_TOKEN }}
        overwrite-settings: true

    - name: Create Maven settings.xml
      run: |
        mkdir -p $HOME/.m2
        echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                      xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                      https://maven.apache.org/xsd/settings-1.0.0.xsd">
                <servers>
                  <server>
                    <id>github</id>
                    <username>${{ github.actor }}</username>
                    <password>${{ secrets.ACTIONS_DEMO_TOKEN }}</password>
                  </server>
                </servers>
              </settings>' > $HOME/.m2/settings.xml

    - name: Set up Git Credentials
      run: |
        git config --global user.name "${{ github.actor }}"
        git config --global user.email "${{ github.actor }}@users.noreply.github.com"
        git config --global credential.helper store
        echo "https://x-access-token:${{ secrets.ACTIONS_DEMO_TOKEN }}@github.com" > ~/.git-credentials

    - name: Build with Maven
      run: mvn clean package

    - name: Check for Artifact
      run: |
        if [ ! -f target/actions-demo-1.0-SNAPSHOT.jar ]; then
          echo "Artifact not found in target directory."
          exit 1
        fi

    - name: Deploy to GitHub Packages
      run: mvn deploy -X

    - name: Clear Git Credentials
      if: always()
      run: |
        git config --global --unset credential.helper
        rm -f ~/.git-credentials
